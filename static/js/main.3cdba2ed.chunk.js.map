{"version":3,"sources":["Icon/Icon.js","Icon/IconGroup.js","Card/Card.js","Collection/Collection.js","App.js","serviceWorker.js","index.js"],"names":["Icon","props","imgSource","type","Container","styled","div","width","height","target","href","linkedin","github","IconGroup","icons","types","split","iconsHTML","i","length","push","size","Group","spacing","Card","Title","h3","Gif","imgName","Link","Text","p","RedText","span","DescriptionCont","console","log","link","title","children","category","madeWith","Collection","state","this","React","Component","App","className","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3cdba2ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = (props) => { \r\n\r\n    const site = {\r\n        linkedin: 'https://www.linkedin.com/in/ruben-vecino',\r\n        github:   'https://www.github.com/rubenvecg'\r\n    };\r\n\r\n    const imgSource = 'Resources/img/icons/' + props.type + '.png';\r\n\r\n    const Container = styled.div`\r\n        width: ${props.width}px;\r\n        height: ${props.height}px;\r\n        background-image: url(${imgSource}); \r\n        background-size: cover; \r\n        margin: 0 auto;          \r\n    `;\r\n\r\n    return (\r\n        <a target='_blank' href={site[props.type]}>\r\n            <Container></Container>\r\n        </a>                \r\n    );\r\n}\r\n \r\nexport default Icon;","import React from 'react';\r\nimport Icon from './Icon.js'\r\nimport styled from 'styled-components';\r\n\r\nconst IconGroup = (props) => {   \r\n\r\n    const icons = props.types.split(\" \");\r\n    const iconsHTML = [];\r\n\r\n    for(var i = 0; i < icons.length; i++){\r\n        iconsHTML.push(<Icon type={icons[i]} width={props.size} height={props.size}></Icon>);\r\n    }\r\n\r\n    const Group = styled.div`\r\n        display: grid;\r\n        grid-template-columns: repeat(${icons.length}, ${props.size}px);\r\n        grid-template-rows: ${props.size}px;\r\n        grid-gap: ${props.spacing}px;\r\n        justify-content: center; \r\n        margin: 0 auto;       \r\n    `;\r\n\r\n    return (\r\n        <Group>{iconsHTML}</Group>\r\n    );\r\n}\r\n \r\nexport default IconGroup;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport IconGroup from '../Icon/IconGroup.js';\r\n\r\n\r\nconst Card = (props) => {\r\n\r\n    const Container = styled.div`\r\n        background: #050808;\r\n        color: #e6e6ea;\r\n        border-radius: 30px;\r\n        border: 1px solid transparent;\r\n\r\n        width: 300px;\r\n        height: 480px;\r\n        margin: 0 auto 20px;\r\n        position: relative;\r\n        padding: 1px 20px 10px;        \r\n\r\n        -webkit-transition: border 0.5s;\r\n        transition: border 0.5s;\r\n\r\n        &:hover{\r\n            border: 1px solid tomato;\r\n        }\r\n\r\n        & h4{\r\n            margin: 10px;\r\n        }\r\n    `;\r\n\r\n    const Title = styled.h3`\r\n        padding: 10px;\r\n        color: tomato;        \r\n        font-weight: normal;\r\n    `;\r\n\r\n    const imgPath = 'Resources/img/projects/';\r\n    const Gif = styled.div`\r\n        width: 300px;\r\n        height: 200px;\r\n        margin: 0 auto;        \r\n        background-image: url(${imgPath + props.imgName}); \r\n        background-size: 100% 100%; \r\n        position: relative;      \r\n    `;\r\n\r\n    const Link = styled.div`\r\n        width: 100%;\r\n        height: 100%;\r\n        -webkit-transition: opacity 0.5s;\r\n        background: #222;\r\n        opacity: 0;    \r\n        \r\n        &:hover{\r\n            opacity: 0.8;\r\n        }\r\n\r\n        \r\n        & a{\r\n            color: white;\r\n            -webkit-transition: color 0.5s;\r\n            transition: color 0.5s;\r\n            text-decoration: none; \r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            \r\n            position: absolute;\r\n            top: 50%;            \r\n            margin-top: -18.5px;\r\n            left: 50%;\r\n            margin-left: -81px; \r\n                                            \r\n        }\r\n\r\n        & a:hover{\r\n            color: tomato;\r\n        }\r\n    `;\r\n\r\n    const Text = styled.p`\r\n        text-align: justify; \r\n        margin-bottom: 0px;         \r\n        font-weight: normal; \r\n        font-size: 14px;     \r\n    `;\r\n\r\n    const RedText = styled.span`\r\n        color: tomato;        \r\n        font-weight: normal;\r\n    `;\r\n\r\n    const DescriptionCont = styled.div`\r\n        height: 120px;\r\n    `;\r\n    \r\n    console.log(\"+\"+props.link+\"+\");\r\n    return (\r\n        <Container>\r\n            <Title>{props.title}</Title>\r\n\r\n            <Gif> \r\n            <Link>\r\n                \r\n                    <a target='_blank' href={props.link}><h3>Click to open</h3></a>                     \r\n                \r\n            </Link>\r\n            </Gif>\r\n\r\n            <DescriptionCont>\r\n                <Text> {props.children} </Text>\r\n            </DescriptionCont>\r\n\r\n            <Text>Category: <RedText>{props.category}</RedText></Text>\r\n            <Text>Made with:</Text>\r\n            <IconGroup types={props.madeWith} size='32' spacing='5'></IconGroup>\r\n\r\n        </Container>\r\n    );\r\n}\r\n \r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass Collection extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            height: '0px'\r\n        };\r\n    }\r\n\r\n    render(){\r\n            const Container = styled.div`\r\n                margin: 0 auto;\r\n                padding-top: 10px;\r\n                display: grid;\r\n                grid-template-columns: repeat(2, 350px);\r\n                justify-content: center;\r\n                width: 800px;\r\n             `;            \r\n\r\n        return ( \r\n            <Container>\r\n                {this.props.children}\r\n            </Container>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n \r\nexport default Collection;","import React from 'react';\r\nimport IconGroup from './Icon/IconGroup.js'\r\nimport Card from './Card/Card.js'\r\nimport Collection from './Collection/Collection.js'\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <div id='header' className='container'>\r\n                <header className=\"page-header\">\r\n                      <h1>Ruben Vecino</h1>\r\n                      <h3>Aspiring Software Engineer</h3>\r\n\r\n                      <div id='personal-links' className='links'>\r\n                            <IconGroup types='linkedin github' size='30' spacing='20'></IconGroup>                \r\n                      </div>\r\n                </header>                \r\n          </div>\r\n\r\n          <div id='about'>\r\n                <h1>About me</h1>\r\n                <p>Lorem Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse nulla nulla, \r\n                      viverra in sapien non, congue convallis purus. Donec non neque diam. Vestibulum \r\n                      euismod tempor odio, eget vestibulum est auctor tincidunt. Duis volutpat in leo \r\n                      vitae condimentum. Vivamus aliquet lacus eget arcu vulputate, vitae egestas est \r\n                      tristique. Suspendisse vehicula, libero eget cursus pretium, magna velit egestas \r\n                      arcu, sit amet aliquet nulla justo et ipsum. Proin auctor, eros non tempus varius, \r\n                      ante erat efficitur risus, vel dignissim turpis nisl at massa. Phasellus scelerisque \r\n                      sapien at nisl elementum, id commodo orci congue. Fusce turpis erat, vulputate eget \r\n                      sem suscipit, commodo posuere mauris. Donec non accumsan odio, sit amet porta nisl. \r\n                      Fusce vitae finibus lectus. Curabitur nec faucibus elit. Praesent sagittis, lorem a \r\n                      aliquam fermentum, odio nisi mattis purus, sed convallis lacus ante id justo. Ut sed \r\n                      nulla mauris. Fusce egestas consequat lacus, vitae dictum sem feugiat in.</p>\r\n          </div>\r\n\r\n          <div id='projects'>\r\n\r\n            <h1 className='section-title'>Projects</h1>\r\n\r\n            <Collection>\r\n            \r\n               <Card title='CTP Portable Website'imgName='ctp-portable.gif' madeWith='react html css js'\r\n                     link='https://ctp-portable.netlify.app/' category='Web Development'>\r\n                  As part of the ctpHomeHacks hackathon, I collaborated with our team's UX designer to develop this landing page for a task management app we proposed.\r\n                  We wanted to make the site as fun and lively as possible with  different animated elements.\r\n                </Card> \r\n\r\n                <Card title='HSL-RGB Color Picker'imgName='color-picker.gif' madeWith='html css js'\r\n                     link='https://rubenvecg.github.io/color-picker' category='Web Development'>\r\n                  This front-end only tool allows to preview, save, edit and remove color references. Sliders adjust their colors \r\n                  dynamically so the user gets an idea of how the color will look. \r\n                </Card> \r\n\r\n                <Card title='Responsive Gym Website'imgName='gym-site.gif' madeWith='html css js bootstrap'\r\n                     link='https://rubenvecg.github.io/gym-site' category='Web Development'>\r\n                  As the final project for my CST 2309 (Web Development) class on Fall 2019, I developed this responsive site \r\n                  using Bootstrap and CSS media queries, as well as native HTML, CSS and Javascript.\r\n                </Card>  \r\n\r\n                <Card title='Minesweeper'imgName='minesweeper.gif' madeWith='java'\r\n                     link='https://github.com/rubenvecg/Minesweeper-Java' category='Game Development'>\r\n                  I enjoy rebuilding classic games and learning the logic behind them. I implemented the flood fill algorithm \r\n                  to reveal all empty cells around the one selected by the player. \r\n                </Card>        \r\n            \r\n            </Collection> \r\n\r\n          </div>           \r\n          \r\n        </div>      \r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}