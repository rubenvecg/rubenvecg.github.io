{"version":3,"sources":["Icon/Icon.js","Icon/IconGroup.js","Card/Card.js","Collection/Collection.js","App.js","serviceWorker.js","index.js"],"names":["Icon","props","imgSource","type","Container","styled","div","width","height","target","href","linkedin","github","IconGroup","icons","types","split","iconsHTML","i","length","push","size","Group","spacing","Card","Gif","imgName","Link","p","Text","DescriptionCont","linkText","undefined","link","separator","console","log","title","source","children","madeWith","Collection","state","Title","Arrow","this","name","React","Component","App","className","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8bAGA,IAwBeA,EAxBF,SAACC,GAEV,IAKMC,EAAY,uBAAyBD,EAAME,KAAO,OAElDC,EAAYC,IAAOC,IAAV,IACFL,EAAMM,MACLN,EAAMO,OACQN,GAK5B,OACI,mBAAGO,OAAO,SAASC,KAhBV,CACTC,SAAU,2CACVC,OAAU,oCAcoBX,EAAME,MAApC,SACI,cAACC,EAAD,O,wRClBZ,IAuBeS,EAvBG,SAACZ,GAKf,IAHA,IAAMa,EAAQb,EAAMc,MAAMC,MAAM,KAC1BC,EAAY,GAEVC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC7BD,EAAUG,KAAK,cAAC,EAAD,CAAMjB,KAAMW,EAAMI,GAAIX,MAAON,EAAMoB,KAAMb,OAAQP,EAAMoB,QAG1E,IAAMC,EAAQjB,IAAOC,IAAV,IAEyBQ,EAAMK,OAAWlB,EAAMoB,KACjCpB,EAAMoB,KAChBpB,EAAMsB,SAKtB,OACI,cAACD,EAAD,UAAQL,K,4yCClBhB,IAoFeO,EApFF,SAACvB,GAEV,IAAMG,EAAYC,IAAOC,IAAV,KA0BTmB,EAAMpB,IAAOC,IAAV,IADO,0BAKsBL,EAAMyB,SAItCC,EAAOtB,IAAOuB,EAAV,KAcJC,EAAOxB,IAAOuB,EAAV,KAKJE,EAAkBzB,IAAOC,IAAV,KAIfyB,OAA4BC,IAAf/B,EAAMgC,KAAsB,GAAK,OAE9CC,OAA4BF,IAAf/B,EAAMgC,KAAsB,GAAK,IAGpD,OADAE,QAAQC,IAAI,IAAInC,EAAMgC,KAAK,KAEvB,eAAC7B,EAAD,WACI,6BAAKH,EAAMoC,QAEX,cAACZ,EAAD,IACA,eAACE,EAAD,WACI,mBAAGlB,OAAO,SAASC,KAAMT,EAAMgC,KAA/B,SAAsCF,IAD1C,IACyDG,EADzD,IACoE,mBAAGzB,OAAO,SAASC,KAAMT,EAAMqC,OAA/B,uBAGpE,cAACR,EAAD,UACI,eAACD,EAAD,eAAQ5B,EAAMsC,SAAd,SAGJ,cAACV,EAAD,yBACA,cAAC,EAAD,CAAWd,MAAOd,EAAMuC,SAAUnB,KAAK,KAAKE,QAAQ,U,iuCClBjDkB,E,kDA5DX,WAAYxC,GAAQ,IAAD,8BACf,gBACKyC,MAAQ,CACTlC,OAAQ,OAHG,E,qDAQX,IAAMJ,EAAYC,IAAOC,IAAV,KAUTqC,EAAQtC,IAAOC,IAAV,KAeLsC,EAAQvC,IAAOC,IAAV,KAYf,OACI,eAACF,EAAD,WACI,eAACuC,EAAD,WACI,cAACC,EAAD,IACA,6BAAKC,KAAK5C,MAAM6C,UAGnBD,KAAK5C,MAAMsC,gB,GAtDHQ,IAAMC,W,MCkEhBC,MA9Df,WACE,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKC,GAAG,SAASD,UAAU,YAA3B,SACM,yBAAQA,UAAU,cAAlB,UACM,8CACA,4DAEA,qBAAKA,UAAU,QAAf,SACM,cAAC,EAAD,CAAWnC,MAAM,kBAAkBM,KAAK,KAAKE,QAAQ,cAKvE,sBAAK4B,GAAG,WAAR,UAEE,oBAAID,UAAU,gBAAd,sBAEA,eAAC,EAAD,CAAYJ,KAAK,kBAAjB,UAEG,cAAC,EAAD,CAAMT,MAAM,uBAAsBX,QAAQ,mBAAmBc,SAAS,oBAChEP,KAAK,oCAAoCK,OAAO,mDADtD,+TAOC,cAAC,EAAD,CAAMD,MAAM,uBAAsBX,QAAQ,mBAAmBc,SAAS,oBACjEP,KAAK,oCAAoCK,OAAO,mDADrD,+TAOA,cAAC,EAAD,CAAMD,MAAM,uBAAsBX,QAAQ,mBAAmBc,SAAS,oBACjEP,KAAK,oCAAoCK,OAAO,mDADrD,kUASJ,cAAC,EAAD,CAAYQ,KAAK,mBAAjB,SAEG,cAAC,EAAD,CAAMT,MAAM,cAAaX,QAAQ,kBAAkBc,SAAS,OACtDF,OAAO,gDADb,6WCxCKc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.fe5448f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = (props) => { \r\n\r\n    const site = {\r\n        linkedin: 'https://www.linkedin.com/in/ruben-vecino',\r\n        github:   'https://www.github.com/rubenvecg'\r\n    };\r\n\r\n    const imgSource = 'Resources/img/icons/' + props.type + '.png';\r\n\r\n    const Container = styled.div`\r\n        width: ${props.width}px;\r\n        height: ${props.height}px;\r\n        background-image: url(${imgSource}); \r\n        background-size: cover; \r\n        margin: 0 auto;          \r\n    `;\r\n\r\n    return (\r\n        <a target='_blank' href={site[props.type]}>\r\n            <Container></Container>\r\n        </a>                \r\n    );\r\n}\r\n \r\nexport default Icon;","import React from 'react';\r\nimport Icon from './Icon.js'\r\nimport styled from 'styled-components';\r\n\r\nconst IconGroup = (props) => {   \r\n\r\n    const icons = props.types.split(\" \");\r\n    const iconsHTML = [];\r\n\r\n    for(var i = 0; i < icons.length; i++){\r\n        iconsHTML.push(<Icon type={icons[i]} width={props.size} height={props.size}></Icon>);\r\n    }\r\n\r\n    const Group = styled.div`\r\n        display: grid;\r\n        grid-template-columns: repeat(${icons.length}, ${props.size}px);\r\n        grid-template-rows: ${props.size}px;\r\n        grid-gap: ${props.spacing}px;\r\n        justify-content: center; \r\n        margin: 0 auto;       \r\n    `;\r\n\r\n    return (\r\n        <Group>{iconsHTML}</Group>\r\n    );\r\n}\r\n \r\nexport default IconGroup;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport IconGroup from '../Icon/IconGroup.js';\r\n\r\n\r\nconst Card = (props) => {\r\n\r\n    const Container = styled.div`\r\n        background: #050808;\r\n        color: #e6e6ea;\r\n        width: 350px;\r\n        height: auto;\r\n        margin: 0 auto 20px;\r\n        position: relative;\r\n        padding: 1px 20px 10px;\r\n        border-radius: 30px;\r\n        border: 1px solid transparent;\r\n\r\n        -webkit-transition: border 0.5s;\r\n        transition: border 0.5s;\r\n\r\n        &:hover{\r\n            border: 1px solid tomato;\r\n        }\r\n\r\n        & h4{\r\n            margin: 10px;\r\n        }\r\n\r\n\r\n    `;\r\n\r\n    const imgPath = 'Resources/img/projects/';\r\n    const Gif = styled.div`\r\n        width: 300px;\r\n        height: 200px;\r\n        margin: 0 auto;        \r\n        background-image: url(${imgPath + props.imgName}); \r\n        background-size: 100% 100%;       \r\n    `;\r\n\r\n    const Link = styled.p`\r\n        text-align: center;\r\n\r\n        & a{\r\n            color: white;\r\n            -webkit-transition: color 0.5s;\r\n            transition: color 0.5s;\r\n        }\r\n\r\n        & a:hover{\r\n            color: tomato;\r\n        }\r\n    `;\r\n\r\n    const Text = styled.p`\r\n        text-align: justify; \r\n        margin-bottom: 0px;       \r\n    `;\r\n\r\n    const DescriptionCont = styled.div`\r\n        height: 150px;\r\n    `;\r\n\r\n    const linkText =  (props.link === undefined) ? \"\" : \"Link\";\r\n    \r\n    const separator = (props.link === undefined) ? \"\" : \"|\";\r\n    \r\n    console.log(\"+\"+props.link+\"+\");\r\n    return (\r\n        <Container>\r\n            <h4>{props.title}</h4>\r\n\r\n            <Gif></Gif> \r\n            <Link>\r\n                <a target='_blank' href={props.link}>{linkText}</a> {separator} <a target='_blank' href={props.source}>Source</a>\r\n            </Link>\r\n\r\n            <DescriptionCont>\r\n                <Text> {props.children} </Text>\r\n            </DescriptionCont>\r\n\r\n            <Text>Made with:</Text>\r\n            <IconGroup types={props.madeWith} size='32' spacing='5'></IconGroup>\r\n\r\n        </Container>\r\n    );\r\n}\r\n \r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass Collection extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            height: '0px'\r\n        };\r\n    }\r\n\r\n    render(){\r\n            const Container = styled.div`\r\n                margin: 0 auto;\r\n                position: relative; \r\n                padding-top: 50px;\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n                justify-content: center;\r\n                width: 800px;\r\n             `;\r\n\r\n            const Title = styled.div`\r\n                position: absolute;\r\n                top: 0px;\r\n                left: 0px;\r\n\r\n                & h2{\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 24px;\r\n                    margin: 0;\r\n                    width: 250px;\r\n                    text-align: left;\r\n                }\r\n            `;\r\n\r\n            const Arrow = styled.div`\r\n                border-top: 4px solid white;\r\n                border-right: 4px solid white;\r\n                border-radius: 2px;\r\n                width: 12px;\r\n                height: 12px;\r\n                margin-top: 10px;\r\n                transform: rotate(45deg); \r\n                transition: transform 0.5s;\r\n                -webkit-transition: transform 0.5s; \r\n            `;\r\n\r\n        return ( \r\n            <Container>\r\n                <Title>\r\n                    <Arrow></Arrow>\r\n                    <h2>{this.props.name}</h2>\r\n                </Title>\r\n\r\n                {this.props.children}\r\n            </Container>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n \r\nexport default Collection;","import React from 'react';\nimport IconGroup from './Icon/IconGroup.js'\nimport Card from './Card/Card.js'\nimport Collection from './Collection/Collection.js'\nimport './App.css';\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <div id='header' className='container'>\n                <header className=\"page-header\">\n                      <h1>Ruben Vecino</h1>\n                      <h3>Aspiring Software Engineer</h3>\n\n                      <div className='links'>\n                            <IconGroup types='linkedin github' size='30' spacing='20'></IconGroup>                \n                      </div>\n                </header>                \n          </div>\n\n          <div id='projects'>\n\n            <h1 className='section-title'>Projects</h1>\n\n            <Collection name='Web Development'>\n            \n               <Card title='CTP Portable Website'imgName='ctp-portable.gif' madeWith='react html css js'\n                     link='https://ctp-portable.netlify.app/' source='https://github.com/rubenvecg/CTPportable-website'>\n                  This was my first front-end development project using React.js. As part of the ctpHomeHacks hackathon,\n                  I collaborated with our team's UX designer to develop this landing page for a task management app we proposed.\n                  We wanted to make the site as fun and lively as possible with  different animated elements.\n                </Card> \n\n                <Card title='CTP Portable Website'imgName='ctp-portable.gif' madeWith='react html css js'\n                     link='https://ctp-portable.netlify.app/' source='https://github.com/rubenvecg/CTPportable-website'>\n                  This was my first front-end development project using React.js. As part of the ctpHomeHacks hackathon,\n                  I collaborated with our team's UX designer to develop this landing page for a task management app we proposed.\n                  We wanted to make the site as fun and lively as possible with  different animated elements.\n                </Card> \n\n                <Card title='CTP Portable Website'imgName='ctp-portable.gif' madeWith='react html css js'\n                     link='https://ctp-portable.netlify.app/' source='https://github.com/rubenvecg/CTPportable-website'>\n                  This was my first front-end development project using React.js. As part of the ctpHomeHacks hackathon,\n                  I collaborated with our team's UX designer to develop this landing page for a task management app we proposed.\n                  We wanted to make the site as fun and lively as possible with  different animated elements.\n                </Card>         \n            \n            </Collection> \n\n            <Collection name='Game Development'>\n            \n               <Card title='Minesweeper'imgName='minesweeper.gif' madeWith='java'\n                     source='https://github.com/rubenvecg/Minesweeper-Java'>\n                  I enjoy rebuilding classic games and learning the logic behind them. I implemented the flood fill algorithm \n                  to reveal all empty cells around the one selected by the player. To improve the game experience, the first selected cell as well as \n                  the surrounding ones will always be empty to ensure the player will not press a mine in the beginning.\n                </Card>             \n            \n            </Collection> \n\n          </div>           \n          \n        </div>      \n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}