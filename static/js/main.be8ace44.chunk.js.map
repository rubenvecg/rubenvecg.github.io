{"version":3,"sources":["Icon/Icon.js","Icon/IconGroup.js","Card/Card.js","Card/Collection.js","Components/Photo.js","Components/Background.js","Components/GlowFilter.js","App.js","serviceWorker.js","index.js"],"names":["Icon","props","imgSource","type","Container","styled","div","width","height","target","href","linkedin","github","IconGroup","icons","types","split","iconsHTML","i","length","push","size","toString","Group","spacing","Card","divRef","React","createRef","state","this","setState","current","clientHeight","Title","h3","Gif","imgName","Link","Text","p","DescriptionCont","console","log","link","ref","title","class","className","children","category","madeWith","Component","Collection","Photo","radius","Background","bgSource","GlowFilter","App","AOS","init","id","data-aos","data-aos-duration","data-aos-delay","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be8ace44.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = (props) => { \r\n\r\n    const site = {\r\n        linkedin: 'https://www.linkedin.com/in/ruben-vecino',\r\n        github:   'https://www.github.com/rubenvecg'\r\n    };\r\n\r\n    const imgSource = 'Resources/img/icons/' + props.type + '.png';\r\n\r\n    const Container = styled.div`\r\n        width: ${props.width}px;\r\n        height: ${props.height}px;\r\n        background-image: url(${imgSource}); \r\n        background-size: cover; \r\n        margin: 0 auto;          \r\n    `;\r\n\r\n    return (\r\n        <a target='_blank' href={site[props.type]}>\r\n            <Container></Container>\r\n        </a>                \r\n    );\r\n}\r\n \r\nexport default Icon;","import React from 'react';\r\nimport Icon from './Icon.js'\r\nimport styled from 'styled-components';\r\n\r\nconst IconGroup = (props) => {   \r\n\r\n    const icons = props.types.split(\" \");\r\n    const iconsHTML = [];\r\n\r\n    for(var i = 0; i < icons.length; i++){\r\n        iconsHTML.push(<Icon key={i.toString()} type={icons[i]} width={props.size} height={props.size}></Icon>);\r\n    }\r\n\r\n    const Group = styled.div`\r\n        display: grid;\r\n        grid-template-columns: repeat(${icons.length}, ${props.size}px);\r\n        grid-template-rows: ${props.size}px;\r\n        grid-gap: ${props.spacing}px;\r\n        justify-content: center; \r\n        margin: 0 auto;       \r\n    `;\r\n\r\n    return (\r\n        <Group>{iconsHTML}</Group>\r\n    );\r\n}\r\n \r\nexport default IconGroup;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport IconGroup from '../Icon/IconGroup.js';\r\n\r\n\r\nclass Card extends React.Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.divRef = React.createRef()\r\n        this.state = {\r\n            height: '0px'\r\n        }       \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            height: this.divRef.current.clientHeight\r\n        });       \r\n    }\r\n\r\n    render(){\r\n            const Container = styled.div`\r\n                color: #e6e6ea;\r\n                width: 350px;\r\n                height: auto;\r\n                margin: 0 auto;\r\n                position: relative;\r\n                padding: 1px 20px 10px; \r\n                \r\n                overflow: hidden;\r\n\r\n                -webkit-transition: all 0.5s;\r\n                transition: all 0.5s;\r\n\r\n                & h4{\r\n                    margin: 10px;\r\n                }  \r\n                \r\n                &:hover .description-cont{\r\n                    height: 150px;\r\n                    overflow: auto;\r\n                }\r\n            `;\r\n\r\n            const Title = styled.h3`\r\n                padding: 10px;\r\n                color: tomato; \r\n                font-size: 24px;       \r\n                font-weight: normal;\r\n            `;\r\n\r\n            const imgPath = 'Resources/img/projects/';\r\n            const Gif = styled.div`\r\n                width: 350px;\r\n                height: 233px;\r\n                margin: 0 auto;        \r\n                background-image: url(${imgPath + this.props.imgName}); \r\n                background-size: 100% 100%; \r\n                position: relative;      \r\n            `;\r\n\r\n            const Link = styled.div`\r\n                width: 100%;\r\n                height: 100%;\r\n                -webkit-transition: opacity 0.5s;\r\n                background: #222;\r\n                opacity: 0;    \r\n                \r\n                &:hover{\r\n                    opacity: 0.8;\r\n                }\r\n\r\n                & .link-cont{\r\n                    width: 100%;\r\n                    height: auto;\r\n\r\n                    position: absolute;\r\n                    top: 50%;\r\n                    margin-top: -12px;\r\n                }\r\n\r\n                & .link-cont a{\r\n                    color: white;\r\n                    opacity: 1;\r\n                    -webkit-transition: color 0.5s;\r\n                    transition: color 0.5s;\r\n                    text-decoration: none; \r\n                    font-size: 24px;\r\n                    font-weight: bold;                                              \r\n                }\r\n\r\n                & .link-cont a:hover{\r\n                    color: tomato;\r\n                }\r\n\r\n                \r\n            `;\r\n\r\n            const Text = styled.p`\r\n                text-align: justify; \r\n                margin-bottom: 0px; \r\n                margin-top: 5px;\r\n                font-size: 14px;  \r\n                \r\n                & b{\r\n                    color: tomato;\r\n                }\r\n            `;          \r\n\r\n            const DescriptionCont = styled.div`\r\n                margin: 0px auto;\r\n                padding-right: 10px;\r\n                height: 0px;\r\n                overflow: hidden; \r\n                transition: height 0.5s;              \r\n            `;\r\n            \r\n            console.log(\"+\"+this.props.link+\"+\");\r\n            console.log(this.state.height);\r\n            return (\r\n                <div>\r\n                <Container ref={this.divRef}>\r\n                    \r\n                    <Title>{this.props.title}</Title>\r\n\r\n                    <Gif> \r\n                    <Link>                \r\n                            <div class='link-cont'>\r\n                                <a target='_blank' href={this.props.link}><h3>Open</h3></a>\r\n                            </div>                \r\n                    </Link>\r\n                    </Gif> \r\n\r\n                    <DescriptionCont className='description-cont'>\r\n                        <Text> {this.props.children} </Text>\r\n                        <Text>Category: <b>{this.props.category}</b></Text>\r\n\r\n                        <Text>Made with:</Text>\r\n                        <IconGroup types={this.props.madeWith} size='32' spacing='5'></IconGroup>\r\n                    </DescriptionCont>                            \r\n                </Container>\r\n\r\n                \r\n                </div>\r\n            );\r\n    }\r\n}\r\n \r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass Collection extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();        \r\n    }\r\n\r\n    render(){\r\n            const Container = styled.div`\r\n                margin: 0 auto;\r\n                padding-top: 10px;\r\n                display: grid;                \r\n                grid-gap: 10px;\r\n                justify-content: center;\r\n                align-items: start;\r\n                width: 100%;\r\n\r\n                @media only screen and (min-width: 800px) {\r\n                    & {\r\n                        grid-template-columns: repeat(2, 350px);\r\n                    }\r\n                }\r\n             `;            \r\n\r\n        return ( \r\n            <Container>\r\n                {this.props.children}\r\n            </Container>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n \r\nexport default Collection;","import styled from 'styled-components';\r\n\r\nconst Photo = (props) => {\r\n    const Container = styled.div`\r\n        width:${props.width}; \r\n        height:${props.height}; \r\n        border-radius:${props.radius};\r\n        margin: 40px auto 60px;\r\n        background-image: url(Resources/img/${props.imgSource});\r\n        background-position: center;\r\n        background-size: cover;\r\n    `;\r\n\r\n    return(\r\n        <Container></Container>\r\n    );\r\n}\r\n\r\nexport default Photo;","import styled from 'styled-components';\r\n\r\nconst Background = (props) => {\r\n    const Container = styled.div`\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: -2;\r\n        background-image: url(Resources/img/${props.bgSource});\r\n        background-size: cover;\r\n        background-position: center;\r\n    `;\r\n\r\n    return (<Container></Container>);\r\n}\r\n\r\nexport default Background;","import styled from 'styled-components';\r\n\r\nconst GlowFilter = (props) => {\r\n    const Container = styled.div`\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: -1;\r\n        background: #011a25;\r\n        opacity: 0.8;\r\n    `;\r\n\r\n    return (<Container></Container>);\r\n}\r\n\r\nexport default GlowFilter;","import React from 'react';\r\nimport IconGroup from './Icon/IconGroup.js'\r\nimport Card from './Card/Card.js'\r\nimport Collection from './Card/Collection.js'\r\nimport Photo from './Components/Photo.js'\r\nimport Background from './Components/Background.js';\r\nimport GlowFilter from './Components/GlowFilter.js'\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport './App.css';\r\n\r\n      \r\n\r\nfunction App() {\r\nAOS.init();\r\n  return (\r\n      <div className=\"App\">\r\n      <Background bgSource='bg.jpg'></Background>\r\n      <GlowFilter></GlowFilter>\r\n          <div id='header' className='container'>\r\n                <header className=\"page-header\">\r\n                      <h1>Ruben Vecino</h1>\r\n                      <h3>Aspiring Software Engineer</h3>\r\n\r\n                      <div id='personal-links' className='links'>\r\n                            <IconGroup types='linkedin github' size='30' spacing='20'></IconGroup>                \r\n                      </div>\r\n                </header>                \r\n          </div>\r\n\r\n          <div id='about' class='section'>\r\n                <h1 className='section-title'>About me</h1>\r\n\r\n                  <div id='about-content'>\r\n                        <div data-aos='fade-right' data-aos-duration='1000'>\r\n                              <Photo \r\n                              id='headshot' width='250px' height='250px' radius='125px' imgSource='photo.jpg'></Photo>\r\n                        </div>\r\n\r\n                        <div data-aos='fade-left' data-aos-duration='2000' data-aos-delay='500'>\r\n\r\n                        <p class='description'>I am a <b>Computer Systems</b> undergraduate student at the <b>New York City</b> College of Technology.\r\n                        Born in <b>Barranquilla, Colombia</b>, I moved to NYC in 2015 and I am currently looking for internship and/or work\r\n                        opportunities.</p>\r\n\r\n                        <p class='description'>Since the moment I wrote my first piece of <b>code</b>, my ever-growing <b>passion</b> for <b>Computer Science</b> has \r\n                        helped me develop skills such as <b>Web Development</b> and <b>Data Analysis & Visualization</b>. As someone who enjoys taking new challenges,\r\n                        I am always on the look to expand my knowledge and learn new disciplines.</p>\r\n                            \r\n                        </div>                       \r\n                  </div>               \r\n          </div>\r\n\r\n          <div id='projects' class='section'>\r\n            <h1 className='section-title'>Projects</h1>\r\n\r\n            <Collection> \r\n            <div>           \r\n               <Card title='CTP Portable Website'imgName='ctp-portable.gif' madeWith='react html css js'\r\n                     link='https://ctp-portable.netlify.app/' category='Web Development'>\r\n                  As part of the ctpHomeHacks hackathon, I collaborated with our team's UX designer to develop this landing page for a task management app we proposed.\r\n                  We wanted to make the site as fun and lively as possible with  different animated elements.\r\n                </Card>\r\n\r\n                <Card title='NYC Data Visualization Project' imgName='heatmap.png' madeWith='python'\r\n                      link='https://www.kaggle.com/rubenvecino/distribution-of-buildings-from-before-1995-in-nyc'\r\n                      category='Data Science'>\r\n                  As part of a research project for my PHYS 1002ID class (Introduction to Physics of Natural Disasters), I developed this heatmap\r\n                  showing the percentage of buildings constructed before 1995 by school districts in New York City. I merged datasets from the NYC\r\n                  Departments of Buildings and City Planning to ensure a total of 1,073,550 buildings to study.\r\n                 </Card>\r\n                     \r\n                <Card title='HSL-RGB Color Picker'imgName='color-picker.gif' madeWith='html css js'\r\n                     link='https://rubenvecg.github.io/color-picker' category='Web Development'>\r\n                  This front-end only tool allows to preview, save, edit and remove color references. Sliders adjust their colors \r\n                  dynamically so the user gets an idea of how the color will look. \r\n                </Card> \r\n            </div>\r\n\r\n            <div>                     \r\n                <Card title='Responsive Gym Website'imgName='gym-site.gif' madeWith='html css js bootstrap'\r\n                     link='https://rubenvecg.github.io/gym-site' category='Web Development'>\r\n                  As the final project for my CST 2309 (Web Development) class on Fall 2019, I developed this responsive site \r\n                  using Bootstrap and CSS media queries, as well as native HTML, CSS and Javascript.\r\n                </Card>  \r\n                \r\n                <Card title='Minesweeper'imgName='minesweeper.gif' madeWith='java'\r\n                     link='https://github.com/rubenvecg/Minesweeper-Java' category='Game Development'>\r\n                  I enjoy rebuilding classic games and learning the logic behind them. I implemented the flood fill algorithm \r\n                  to reveal all empty cells around the one selected by the player. \r\n                </Card> \r\n            </div>            \r\n            </Collection> \r\n\r\n          </div>           \r\n          \r\n        </div>      \r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}